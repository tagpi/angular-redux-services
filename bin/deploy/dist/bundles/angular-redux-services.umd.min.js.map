{
  "version": 3,
  "file": "angular-redux-services.umd.min.js",
  "sources": [
    "ng://angular-redux-services/node_modules/tslib/tslib.es6.js",
    "ng://angular-redux-services/out/class/redux-subject.class.ts",
    "ng://angular-redux-services/out/class/subscriber-manager.class.ts",
    "ng://angular-redux-services/out/class/map-manager.class.ts",
    "ng://angular-redux-services/out/service/redux.service.ts",
    "ng://angular-redux-services/out/pipe/rx-state.pipe.ts",
    "ng://angular-redux-services/out/redux.module.ts",
    "ng://angular-redux-services/out/decorator/rx-action.decorator.ts",
    "ng://angular-redux-services/out/decorator/rx-epic.decorator.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { BehaviorSubject, PartialObserver, Subscription } from 'rxjs';\nimport { baseDirectiveCreate } from '@angular/core/src/render3/instructions';\n\nexport class ReduxSubject<T> extends BehaviorSubject<T> {\n\n  private active = 0;\n\n  constructor(\n    defaultValue: any,\n    private onActivate: () => void,\n    private onDeactivate: () => void) {\n\n    super(defaultValue);\n\n  }\n\n  subscribe(): Subscription {\n\n    // link to\n    if (this.active === 0) {\n      this.onActivate();\n    }\n\n    // track the number of subscriptions\n    this.active++;\n\n    // override unsubscribe\n    const subscription = super.subscribe(...Array.prototype.slice.call(arguments));\n    const originalUnsub = subscription.unsubscribe.bind(subscription);\n    subscription.unsubscribe = () => {\n      this.active--;\n\n      // start deactivation when there are no subscriptions\n      if (!this.active) {\n        this.onDeactivate();\n      }\n\n      originalUnsub();\n    };\n\n    return subscription;\n\n  }\n\n}\n",
    "import { BehaviorSubject, Subscription } from 'rxjs';\nimport { get, isEqual } from 'lodash';\nimport { ReduxSubject } from './redux-subject.class';\n\nexport class SubscriberManger {\n\n  /**\n   * Tracks the active selections. Each subject gets updated\n   * when broadcast is called.\n   */\n  private selections: { path?: BehaviorSubject<any> } = { };\n\n  /**\n   * Create a subscriber manager\n   * @param getState method that returns the full state;\n   */\n  constructor(private getState: () => any) {\n\n  }\n\n  /**\n   * Returns a redux observable for the state slice.\n   * @param path\n   */\n  public select<T>(path: string): BehaviorSubject<T> {\n\n    let sliceSub: Subscription;\n    const slice = this.setSlice<T>(path);\n\n    const onActivate = () => {\n      slice.links++;\n      sliceSub = slice.subscribe((reply: T) => reduxSubject.next(reply));\n    };\n\n    const onDeactivate = () => {\n      sliceSub.unsubscribe();\n      slice.links--;\n      if (!slice.links) {\n        this.removeSlice(path);\n      }\n    };\n\n    const reduxSubject = new ReduxSubject<T>(slice.value, onActivate, onDeactivate);\n    return reduxSubject;\n\n  }\n\n  /**\n   * Sets the state slice.\n   * @param path\n   */\n  private setSlice<T>(path: string): BehaviorSubject<T> & { links?: number } {\n    const sub = this.selections[path];\n    if (sub) { return sub; }\n\n    const value = get(this.getState(), path);\n    const slice: BehaviorSubject<T> & { links?: number } = new BehaviorSubject(value);\n    slice.links = 0;\n\n    this.selections[path] = slice;\n    return slice;\n  }\n\n  /**\n   * Clear the slice.\n   * @param path\n   */\n  private removeSlice(path: string) {\n    delete this.selections[path];\n  }\n\n  /**\n   * Return the subscriber middleware.\n   */\n  public createMiddleware() {\n    return store => next => action => {\n      const result = next(action);\n      this.broadcast(this.getState());\n      return result;\n    };\n  }\n\n  /**\n   * Update all tracked observers.\n   * @param state\n   */\n  private broadcast(state) {\n    if (!this.selections) { return; }\n\n    const keys = Object.keys(this.selections);\n    for (let i = keys.length - 1; i > -1; i--) {\n      const path = keys[i];\n      const subject = this.selections[path];\n      const stateValue = get(state, path);\n      if (!isEqual(stateValue, subject.getValue())) {\n        subject.next(stateValue);\n      }\n    }\n\n  }\n\n}\n",
    "import { get, cloneDeep } from 'lodash';\nimport { ReduxService } from '../service/redux.service';\nimport { Action } from '../model/action.model';\nimport { take, map, flatMap, filter, switchMap } from 'rxjs/operators';\nimport { Observable, Observer, Subscription } from 'rxjs';\nimport { ActionConfig } from '../model/action-config.model';\n\nexport class MapManager {\n\n  /**\n   * Tracks the loaded services\n   */\n  private loaded: { [path: string]: any } = {};\n\n  /**\n   * Safe epic list. Only gets triggered when dispatched through this service.\n   * For global triggered epics, Use redux-observable via epics param in the\n   * init function.\n   */\n  private epic: { actionType?: any } = { };\n\n  /**\n   * Tracks added services prior to store initialization.\n   */\n  private initQueue: any[] = [];\n\n  /**\n   * Process queued services\n   * @param reduxService\n   */\n  public init(reduxService: ReduxService) {\n    while (this.initQueue.length) {\n      const serviceInstance = this.initQueue.shift();\n      this.add(reduxService, serviceInstance);\n    }\n  }\n\n  /**\n   * Add a redux map service class instance.\n   * @param reduxService Redux service that will consume it\n   * @param serviceInstance Service instance of the class\n   */\n  public add(reduxService: ReduxService, serviceInstance: any) {\n\n    const serviceName = serviceInstance.constructor.name;\n\n    // check if redux service is initialized\n    if (!reduxService.isInitialized) {\n      this.initQueue.push(serviceInstance);\n      return;\n    }\n\n    // identify path\n    const path = serviceInstance.constructor.path;\n    if (!path) {\n      console.error('Redux map static path not found for', serviceName);\n      return;\n    }\n\n    // identify properties\n    this.identify(reduxService, serviceInstance);\n\n  }\n\n  /**\n   * Convert the map to the redux flow\n   * @param reduxService\n   * @param serviceInstance\n   */\n  private identify(reduxService: ReduxService, serviceInstance: any) {\n\n    const path = serviceInstance.constructor.path;\n    const reducer = (this.loaded[path] = this.loaded[path] || {});\n\n    // identify parts\n    const keys = Object.getOwnPropertyNames(serviceInstance.constructor.prototype);\n    if (keys && keys.length) {\n      keys.forEach(propertyName => {\n        const rx = get(serviceInstance.constructor.prototype[propertyName], `prototype.constructor.__rx__`);\n        if (rx) {\n          if (rx.epic) {\n            this.addEpic(reduxService, serviceInstance, propertyName, rx.epic);\n          }\n          if (rx.action) {\n            this.addAction(reduxService, serviceInstance, propertyName, rx.action, reducer);\n          }\n        }\n      });\n    }\n\n    // create reset action\n    this.addResetAction(reduxService, serviceInstance, reducer);\n\n    // finalize reducer\n    if (Object.keys(reducer).length) {\n      this.addReducer(reduxService, serviceInstance, reducer);\n    }\n\n  }\n\n  /**\n   * Add an epic.\n   */\n  private addEpic(reduxService: ReduxService, serviceInstance: any, propertyName: string, epic: any) {\n\n    const actionName = `${serviceInstance.constructor.path}.${epic.source}`;\n    this.epic[actionName] = this.epic[actionName] || [];\n\n    // create single observable for the epic instance\n    // warning: this observer is never destroyed\n    let observer: Observer<any>;\n    let observable = Observable.create(_observer => {\n      observer = _observer;\n    })\n\n    // return the observabel from the epic function\n    .pipe(flatMap(action => serviceInstance[propertyName](action)));\n\n    // add the relay output if provided\n    const relay = epic.relay && `${serviceInstance.constructor.path}.${epic.relay}`;\n    if (relay) {\n      observable = observable.pipe(map(result => ({\n        type: relay,\n        payload: result\n      })));\n    }\n\n    let sub: Subscription;\n\n    // emit from epic\n    if (epic.config && epic.config.cancelable) {\n      this.epic[actionName].push((action: Action) => {\n        if (sub) { sub.unsubscribe(); }\n        sub = observable.subscribe(payload => reduxService.dispatch(payload));\n        observer.next(action.payload);\n      });\n\n    // single stream observable\n    } else {\n      sub = observable.subscribe(payload => reduxService.dispatch(payload));\n      this.epic[actionName].push((action: Action) => {\n        observer.next(action.payload);\n      });\n    }\n\n  }\n\n  /**\n   * Add an action\n   */\n  private addAction(reduxService: ReduxService, serviceInstance: any, propertyName: string, action: any, reducer: any) {\n    let actionName = `${serviceInstance.constructor.path}.${propertyName}`;\n    switch (propertyName) {\n      case reduxService.initActionType:\n      case reduxService.resetActionType:\n        actionName = propertyName;\n        break;\n    }\n\n    const fn: { config: ActionConfig } = serviceInstance[propertyName]();\n    if (!fn) { return; }\n\n    fn.config = action.config;\n    reducer[actionName] = fn;\n\n    serviceInstance[propertyName] = (payload: any) => {\n\n      // include the root state if requested\n      if (fn.config.includeRoot) {\n        payload = payload || {};\n        payload.$root = reduxService.getState();\n      }\n\n      // return an observable\n      let reply;\n      if (fn.config.return) {\n\n        const cfg: any = fn.config.return;\n        const path = cfg.path\n          ? `${serviceInstance.constructor.path}.${cfg.path}`\n          : serviceInstance.constructor.path;\n\n        if (cfg === true) {\n          reply = reduxService.select(serviceInstance.constructor.path);\n        } else if (!cfg.action) {\n          reply = reduxService.select(path);\n        } else {\n          reply = reduxService.select(reduxService.reduxServiceName)\n            .pipe(\n              filter(value => value === `${serviceInstance.constructor.path}.${cfg.action}`),\n              switchMap(() => reduxService.select(path)),\n            );\n        }\n\n      }\n\n      // dispatch the action\n      reduxService.dispatch({ type: actionName, payload });\n      return reply;\n\n    };\n  }\n\n  /**\n   * Add a reducer.\n   */\n  private addReducer(reduxService: ReduxService, serviceInstance: any, reducer: any) {\n    const { path, preserve } = serviceInstance.constructor;\n    const initial = serviceInstance.constructor.initial || {};\n    const reducerMethod = (state: any = initial, action: Action) => {\n\n      const op = reducer[action.type];\n      if (!op) { return state; }\n      if (op.config.direct) { return op(state, action); }\n\n      const newState = cloneDeep(state);\n      const payload = cloneDeep(action.payload);\n      op(newState, payload);\n      return newState;\n\n    };\n    reducerMethod['config'] = { path, preserve };\n    reduxService.add(path, reducerMethod);\n  }\n\n  /**\n   * Trigger the safe epics.\n   * @param action\n   */\n  public safeDispatch(reduxService: ReduxService, action: Action) {\n\n    if (!action || !action.type) {\n      console.warn('Redux safe dispatch called without action');\n      return;\n    }\n\n    const epics = this.epic[action.type];\n    if (epics) {\n      epics.forEach(epicWrapper => epicWrapper(action));\n    }\n\n  }\n\n  /**\n   * Creates the reset action.\n   */\n  private addResetAction(reduxService: ReduxService, serviceInstance: any, reducer: any) {\n\n    // do not create reset action if it has been overriden\n    const keys = Object.getOwnPropertyNames(serviceInstance.constructor.prototype);\n    if (keys.find(key => key === reduxService.resetActionType)) {\n      return;\n    }\n\n    // do not create a reset action if preserve is set\n    if (serviceInstance.constructor.preserve) {\n      return;\n    }\n\n    // reset to initial\n    const action = () => {\n      return serviceInstance.constructor.initial || {};\n    };\n    action['config'] = { direct: true };\n    reducer[reduxService.resetActionType] = action;\n\n  }\n\n}\n",
    "import { Injectable } from '@angular/core';\nimport { combineReducers, createStore, Store, compose, applyMiddleware } from 'redux';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { SubscriberManger } from '../class/subscriber-manager.class';\nimport { MapManager } from '../class/map-manager.class';\nimport { Action } from '../model/action.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ReduxService {\n\n  public get reduxServiceName() { return '@redux-service'; }\n  public get initActionType() { return '@@INIT'; }\n  public resetActionType = '@@RESET';\n  public isInitialized = false;\n\n  /**\n   * Redux store.\n   */\n  private store: Store<any>;\n\n  /**\n   * Reducer list.\n   */\n  private reducers: any = {\n    [this.reduxServiceName]: (state = {}, action) => action.type\n  };\n\n  /**\n   * Manages state sices into observables.\n   */\n  private subscriber: SubscriberManger;\n\n  /**\n   * Applies redux maps into the redux pattern.\n   */\n  private map: MapManager;\n\n\n  constructor() {\n    this.subscriber = new SubscriberManger(() => this.getState());\n    this.map = new MapManager();\n  }\n\n  /**\n   * Initializes the redux service\n   * @param preloadedState Initial state\n   * @param epics Global epics using redux-observables\n   * @param isProduction Adds devtools if non production\n   */\n  public init(preloadedState = {}, middleware = [], isProduction = false) {\n\n    // middleware\n    const composeMiddleware = (!isProduction && window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']) || compose;\n    const loadedMiddleware = composeMiddleware(applyMiddleware(\n      ...middleware,\n      this.subscriber.createMiddleware(),\n    ));\n\n    // create store\n    this.store = createStore(\n      combineReducers(this.reducers),\n      preloadedState,\n      loadedMiddleware\n    );\n\n    // service has been initialized\n    this.isInitialized = true;\n\n    // initialize map with newly created store\n    this.map.init(this);\n\n    // TODO: find why first subscribe does not work\n    this.select(this.reduxServiceName).subscribe();\n\n  }\n\n  /**\n   * Add a reducer.\n   * @param name Root path for the reducer (@search)\n   * @param reducer Reducer method (state, action) => state\n   */\n  public add(name, reducer) {\n    this.reducers[name] = reducer;\n    this.store.replaceReducer(combineReducers(this.reducers));\n  }\n\n  /**\n   * Registers a redux service instance.\n   * @param serviceInstance\n   */\n  public register(...services: any[]) {\n    if (arguments && arguments.length) {\n      const args = Array.from(arguments);\n      args.forEach(service => service && this.map.add(this, service));\n    }\n  }\n\n  /**\n   * Return the current state.\n   */\n  public getState(): any {\n    return this.store.getState();\n  }\n\n  /**\n   * Dispact an action.\n   * @param action\n   */\n  public dispatch(action: Action) {\n    this.store.dispatch(action);\n    this.map.safeDispatch(this, action);\n  }\n\n  /**\n   * Subscribe to a state slice\n   * @param path\n   */\n  public select<T>(path: string): BehaviorSubject<T> {\n    return this.subscriber.select(path);\n  }\n\n\n  /**\n   * Returns all slices to initial setup.\n   */\n  public reset(clearPreserve = false) {\n    this.dispatch({\n      type: this.resetActionType,\n      payload: { clearPreserve }\n    });\n  }\n\n}\n",
    "import { AsyncPipe } from '@angular/common';\nimport { Pipe, PipeTransform, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { ReduxService } from '../service/redux.service';\nimport { Subscription } from 'rxjs';\n\n@Pipe({\n  name: 'rxState',\n  pure: false\n})\nexport class RxStatePipe implements PipeTransform, OnDestroy {\n\n  async: AsyncPipe;\n  sub: Subscription;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef, private reduxService: ReduxService) {\n    this.async = new AsyncPipe(this.changeDetectorRef);\n  }\n\n  transform(value: string): any {\n    const select = this.reduxService.select(value);\n    this.sub = select.subscribe(() => this.changeDetectorRef.markForCheck());\n    return this.async.transform(select);\n  }\n\n  ngOnDestroy () {\n    this.async.ngOnDestroy();\n    if (this.sub) { this.sub.unsubscribe(); }\n  }\n\n}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReduxService } from './service/redux.service';\nimport { RxStatePipe } from './pipe/rx-state.pipe';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ RxStatePipe ],\n  exports: [ RxStatePipe ],\n})\nexport class ReduxModule {\n\n}\n",
    "import { ActionConfig } from '../model/action-config.model';\n\n/**\n * Configure a action for the state slice. The state and payload\n * parameters has been deep cloned. This output will be the parameter\n * state. It will not read the return output.\n * @param config Additonal action configuration\n */\nexport function rxAction(config: ActionConfig = {}) {\n\n  config = config || {};\n\n  return function (target, propertyKey: string, descriptor: PropertyDescriptor) {\n    target[propertyKey]['__rx__'] = target['__rx__'] || {};\n    target[propertyKey]['__rx__'].action = {\n      name: `${propertyKey}`,\n      config\n    };\n  };\n}\n\n",
    "import { EpicConfig } from '../model/epic-config';\n\n/**\n * Configure an epic.\n * @param source The action name to create the epic on.\n * @param relay The action name to call once the epic completes.\n * @param config Additional configuration\n */\nexport function rxEpic(source: string, relay?: string, config: EpicConfig = { }) {\n\n  config = config || {};\n  if (config.cancelable === null || config.cancelable === undefined) {\n    config.cancelable = true;\n  }\n\n  return function (target, propertyKey: string, descriptor: PropertyDescriptor) {\n    target[propertyKey]['__rx__'] = target['__rx__'] || {};\n    target[propertyKey]['__rx__'].epic = { source, relay, config };\n  };\n}\n\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "__spread",
    "arguments",
    "length",
    "concat",
    "ReduxSubject",
    "_super",
    "defaultValue",
    "onActivate",
    "onDeactivate",
    "_this",
    "this",
    "active",
    "__",
    "constructor",
    "prototype",
    "create",
    "tslib_1.__extends",
    "subscribe",
    "subscription",
    "apply",
    "slice",
    "originalUnsub",
    "unsubscribe",
    "bind",
    "BehaviorSubject",
    "SubscriberManger",
    "getState",
    "selections",
    "select",
    "path",
    "sliceSub",
    "setSlice",
    "reduxSubject",
    "links",
    "reply",
    "removeSlice",
    "sub",
    "get",
    "createMiddleware",
    "store",
    "action",
    "result",
    "broadcast",
    "state",
    "keys",
    "subject",
    "stateValue",
    "isEqual",
    "getValue",
    "MapManager",
    "loaded",
    "epic",
    "initQueue",
    "init",
    "reduxService",
    "serviceInstance",
    "shift",
    "add",
    "serviceName",
    "name",
    "isInitialized",
    "identify",
    "console",
    "reducer",
    "getOwnPropertyNames",
    "forEach",
    "propertyName",
    "rx",
    "addEpic",
    "addAction",
    "addResetAction",
    "addReducer",
    "observer",
    "actionName",
    "source",
    "observable",
    "Observable",
    "_observer",
    "pipe",
    "flatMap",
    "relay",
    "map",
    "type",
    "payload",
    "config",
    "cancelable",
    "dispatch",
    "initActionType",
    "resetActionType",
    "fn",
    "includeRoot",
    "$root",
    "return",
    "cfg_1",
    "path_1",
    "reduxServiceName",
    "filter",
    "switchMap",
    "_a",
    "preserve",
    "initial",
    "reducerMethod",
    "op",
    "direct",
    "newState",
    "cloneDeep",
    "safeDispatch",
    "epics",
    "epicWrapper",
    "warn",
    "find",
    "key",
    "ReduxService",
    "reducers",
    "subscriber",
    "defineProperty",
    "preloadedState",
    "middleware",
    "isProduction",
    "loadedMiddleware",
    "window",
    "compose",
    "applyMiddleware",
    "createStore",
    "combineReducers",
    "replaceReducer",
    "register",
    "services",
    "_i",
    "from",
    "service",
    "reset",
    "clearPreserve",
    "Injectable",
    "args",
    "providedIn",
    "RxStatePipe",
    "changeDetectorRef",
    "async",
    "AsyncPipe",
    "transform",
    "markForCheck",
    "ngOnDestroy",
    "Pipe",
    "pure",
    "ChangeDetectorRef",
    "ReduxModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports",
    "target",
    "propertyKey",
    "descriptor",
    "undefined"
  ],
  "mappings": "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"
}
